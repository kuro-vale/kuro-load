import http from "k6/http";
import {check, sleep} from "k6";

export const options = {
  stages: [
    {duration: "5m", target: 100},
    {duration: "30m", target: 100},
    {duration: "5m", target: 0},
  ],
  tags: {
    testid: "kuro-tweet"
  }
};

export default function () {
  const host = "https://kuro-tweet.up.railway.app/";
  const headers = {"Content-Type": "application/json", "Authorization": ""};
  // Login
  let payload = JSON.stringify({query: LOGIN_QUERY});
  let res = http.post(host, payload, {headers});
  check(res, {
    "returns a token": r => r.json()["data"]["Auth"]["login"]["token"].startsWith("e")
  });
  // Create Tweet
  headers.Authorization = `${res.json()["data"]["Auth"]["login"]["token"]}`;
  payload = JSON.stringify({query: COMPOSE_QUERY});
  res = http.post(host, payload, {headers});
  check(res, {
    "returns an id": r => !!parseInt(r.json()["data"]["TweetOps"]["compose"]["id"])
  });
  const tweetId = res.json()["data"]["TweetOps"]["compose"]["id"];
  // Heart tweet
  payload = JSON.stringify({query: HEART_QUERY.replace(":tweetId", `${tweetId}`)});
  res = http.post(host, payload, {headers});
  check(res, {
    "returns success": r => r.json()["data"]["TweetOps"]["heart"] === "Success"
  });
  // Search tweets
  payload = JSON.stringify({query: SEARCH_QUERY});
  res = http.post(host, payload, {headers});
  check(res, {
    "status is 200": r => r.status === 200
  });
  // Sleep
  sleep(1);
}


const LOGIN_QUERY = `
mutation Login {
  Auth {
    login(password: "loadtest", username: "loadtest") {
      token
    }
  }
}
`;


const COMPOSE_QUERY = `
mutation TweetOps {
  TweetOps {
    compose(body: "[AUTOMATED TEST] TWEET GENERATED BY K6 \\n I LOVE SILVERVALE ðŸ©·ðŸ©·ðŸ©· SHE IS THE BEST ðŸ©·ðŸ©·ðŸ©·") {
      id
    }
  }
}
`;

const HEART_QUERY = `
mutation Heart {
    TweetOps {
      heart(tweetId: :tweetId)
    }
  }
`;

const SEARCH_QUERY = `
query Query {
  TweetQueries {
    searchTweets(filter: {body: ""}) {
      id
      body
      author {
        id
        username
        followers
        following
        isFollowedByYou
        isFollowingYou
      }
      createdAt
      comments
      hearts
      retweets
      isHeartedByYou
      isRetweetedByYou
      parentId
      parent {
        id
        body
        author {
          id
          username
          followers
          following
          isFollowedByYou
          isFollowingYou
        }
        createdAt
        comments
        hearts
        retweets
        isHeartedByYou
        isRetweetedByYou
        parentId
      }
    }
  }
}
`;